A4: Component Details
B4: "transport-dashboard.component.ts & .html"
C4: "Core dashboard component for transporters"
D4: "1. Segmented view with three tabs:
     - Active Deliveries
     - Upcoming Deliveries
     - Completed Deliveries
     2. Order cards showing:
     - Order ID
     - Wholesaler & Buyer info
     - Pickup/Delivery locations
     - Status with color coding
     3. Action buttons for active orders:
     - Track
     - Details
     - Modify"

E4: "Data Properties:
     - selectedTab: string
     - activeDeliveries: Order[]
     - upcomingDeliveries: Order[]
     - completedDeliveries: Order[]

     Methods:
     1. ngOnInit(): Initializes component
     2. loadUpcomingDeliveries(): Loads pending orders
     3. onTabChange(): Handles tab switching
     4. getStatusColor(): Maps status to colors"

F4: "Order Interface:
     {
       id: string,
       wholesaler: string,
       buyer: string,
       location: string,
       deliveryAddress: string,
       status: string
     }"

G4: "External Dependencies:
     1. @angular/core
     2. @ionic/angular
     3. @angular/common
     4. @angular/forms
     5. @angular/router
     6. UpcomingDeliveriesService"

H4: "UI Components Used:
     1. ion-content
     2. ion-segment
     3. ion-list
     4. ion-item
     5. ion-label
     6. ion-chip
     7. ion-buttons"

Formatting:
- Apply borders to A4:H4
- Set row height to accommodate content
- Enable text wrapping
- Left align all content
- Use bullet points for lists

A5: Component Details
B5: "transport-requests.component.ts & .html"
C5: "Manages incoming delivery requests and order assignments"
D5: "1. Real-time unassigned orders display
     2. Two-column layout for pending deliveries
     3. Order acceptance workflow
     4. Load capacity management
     5. Filter and sort functionality
     6. Driver assignment system"

E5: "Data Properties:
     - unassignedOrders: DeliveryOrder[]
     - pendingDeliveries: DeliveryOrder[]
     - transporterId: string
     - minLoad/maxLoad: number
     - currentLoad: number

     Key Methods:
     1. loadUnassignedOrders(): Polls for new orders
     2. acceptUnassignedOrder(): Handles order acceptance
     3. checkLoadWithinCapacity(): Validates load constraints
     4. applyFilters(): Manages order filtering
     5. applySort(): Handles order sorting"

F5: "DeliveryOrder Interface:
     {
       id: number,
       pickupLocation: string,
       dropoffLocation: string,
       weight: number,
       type: string,
       distance: number,
       deliveryDate: string,
       suggestedPrice: number,
       accepted?: boolean,
       assigned?: boolean
     }"

G5: "External Dependencies:
     1. AlertController
     2. ToastController
     3. ModalController
     4. DatabaseService
     5. FilterModalComponent
     6. SortModalComponent
     7. AssignDriverModalComponent"

H5: "UI Components Used:
     1. ion-list/ion-card
     2. ion-grid system
     3. ion-buttons
     4. ion-footer
     5. Custom modals
     6. Toast notifications
     7. Alert dialogs"

Formatting:
- Apply borders to A5:H5
- Match formatting with existing rows
- Enable text wrapping
- Left align content
- Use bullet points for lists

A6: Component Details
B6: "vehicle-form-modal.component.ts & .html"
C6: "Modal form for adding/editing vehicle and driver details"
D6: "1. Vehicle information form
     2. Driver details management
     3. Electric vehicle options
     4. Carbon credits tracking
     5. Form validation
     6. Modal actions (save/dismiss)"

E6: "Data Properties:
     - vehicle: VehicleData
     - isEdit: boolean

     Methods:
     1. dismiss(): Closes modal
     2. saveVehicle(): Saves form data
     3. validateForm(): Form validation"

F6: "VehicleData Interface:
     {
       type: string,
       capacity: number,
       driver: string,
       driverContact: string,
       isElectric: boolean,
       carbonCredits?: number
     }"

G6: "External Dependencies:
     1. IonicModule
     2. ModalController
     3. FormsModule
     4. CommonModule"

H6: "UI Components Used:
     1. ion-header/footer
     2. ion-input fields
     3. ion-toggle
     4. ion-buttons
     5. Form validation
     6. Modal controls"

A7: Component Details
B7: "transport.component.ts & .html"
C7: "Root component for transport module with navigation menu"
D7: "1. Side menu navigation
     2. Dynamic page titles
     3. Route management
     4. Menu toggle functionality
     5. Active route tracking
     6. Icon management"

E7: "Data Properties:
     - pageTitle: string
     - activeRoute: string
     - titleMap: object

     Methods:
     1. getPageTitle(): Updates title
     2. isActive(): Checks active route
     3. NavigationEnd handling"

F7: "Navigation Structure:
     - Dashboard
     - Transport Requests
     - Update Rates
     - Manage Vehicles
     - Manage Drivers
     - Live Tracking
     - Delivery Confirmation
     - Earnings & Reports
     - History
     - Notifications"

G7: "External Dependencies:
     1. RouterModule
     2. IonicModule
     3. CommonModule
     4. Ionicons"

H7: "UI Components Used:
     1. ion-menu
     2. ion-router-outlet
     3. ion-toolbar
     4. ion-buttons
     5. Navigation items
     6. Icon system"

Formatting:
- Apply borders to A6:H7
- Match formatting with existing rows
- Enable text wrapping
- Left align content
- Use bullet points for lists

A8: Component Details
B8: "transport-update-rates.component.ts & .html"
C8: "Manages transport rate settings and pricing configuration"
D8: "1. Rate configuration form
     2. Fleet availability toggle
     3. Distance-based pricing
     4. Load-based pricing
     5. Fleet capacity management
     6. Service area preferences"

E8: "Data Properties:
     - rateForm: FormGroup
     - isSubmitting: boolean

     Methods:
     1. updateRates(): Saves rate changes
     2. showToast(): Displays notifications
     3. form validation handlers"

F8: "Rate Configuration Interface:
     {
       perKmRate: number,
       perKgRate: number,
       peakHourRate: number,
       isAvailable: boolean,
       fleetCapacity: number,
       serviceAreas: string
     }"

G8: "External Dependencies:
     1. FormBuilder
     2. ReactiveFormsModule
     3. ToastController
     4. DatabaseService
     5. HttpClient"

H8: "UI Components Used:
     1. ion-toggle
     2. ion-input
     3. ion-textarea
     4. Form controls
     5. Toast notifications
     6. Loading spinner"

Formatting:
- Apply borders to A8:H8
- Match formatting with existing rows
- Enable text wrapping
- Left align content
- Use bullet points for lists

A9: Component Details
B9: "notifications.component.ts & .html"
C9: "Notification center for delivery updates and alerts"
D9: "1. Real-time notification display
     2. Notification categorization
     3. Priority-based alerts
     4. Quick actions
     5. Navigation to related screens"

E9: "Data Properties:
     - notifications: Notification[]

     Methods:
     1. goToOrdersDashboard(): Navigation
     2. markAsRead(): Status update
     3. handleNotificationClick()"

F9: "Notification Interface:
     {
       title: string,
       message: string,
       time: string,
       icon: string,
       color: string
     }"

G9: "External Dependencies:
     1. IonicModule
     2. CommonModule
     3. Router
     4. NotificationService"

H9: "UI Components Used:
     1. ion-list
     2. ion-item
     3. ion-icon
     4. ion-label
     5. ion-footer
     6. ion-button"

A10: Component Details
B10: "assign-driver-modal.component.ts & .html"
C10: "Modal interface for driver and vehicle assignment"
D10: "1. Driver selection
      2. Vehicle assignment
      3. Order association
      4. Status updates
      5. Confirmation workflow"

E10: "Data Properties:
      - drivers: Driver[]
      - vehicles: Vehicle[]
      - selectedDriver: number
      - selectedVehicle: number

      Methods:
      1. assignDriver(): Assignment handler
      2. dismiss(): Modal control
      3. validateSelection()"

F10: "Driver/Vehicle Interfaces:
      Driver: {
        id: number,
        name: string
      }
      Vehicle: {
        id: number,
        licensePlate: string
      }"

G10: "External Dependencies:
      1. ModalController
      2. ToastController
      3. UpcomingDeliveriesService
      4. FormsModule
      5. IonicModule"

H10: "UI Components Used:
      1. ion-header
      2. ion-select
      3. ion-button
      4. ion-content
      5. Form controls
      6. Toast messages"

Formatting:
- Apply borders to A9:H10
- Match formatting with existing rows
- Enable text wrapping
- Left align content
- Use bullet points for lists

A11: Component Details
B11: "manage-drivers.component.ts & .html"
C11: "Driver management interface with CRUD operations"
D11: "1. Driver list display
      2. Add/Edit/Delete drivers
      3. Toggle driver availability
      4. Vehicle assignment
      5. Contact information"

E11: "Data Properties:
      - drivers: Driver[]

      Methods:
      1. addDriver(): Creates new driver
      2. editDriver(): Updates driver
      3. deleteDriver(): Removes driver
      4. showToast(): Notifications"

F11: "Driver Interface:
      {
        id: number,
        name: string,
        phone: string,
        vehicle: string,
        available: boolean
      }"

G11: "External Dependencies:
      1. AlertController
      2. ToastController
      3. IonicModule
      4. FormsModule
      5. CommonModule"

H11: "UI Components Used:
      1. ion-list
      2. ion-toggle
      3. ion-buttons
      4. Alert dialogs
      5. Toast messages
      6. ion-icons"

A12: Component Details
B12: "manage-vehicles.component.ts & .html"
C12: "Vehicle fleet management with EV tracking"
D12: "1. Vehicle inventory display
      2. Add/Edit/Delete vehicles
      3. EV status tracking
      4. Carbon credits monitoring
      5. Driver assignment"

E12: "Data Properties:
      - vehicles: Vehicle[]

      Methods:
      1. openVehicleForm(): Modal control
      2. deleteVehicle(): Removes vehicle
      3. showToast(): Notifications"

F12: "Vehicle Interface:
      {
        id: number,
        type: string,
        capacity: number,
        available: boolean,
        driver?: string,
        isElectric?: boolean,
        carbonCredits?: number
      }"

G12: "External Dependencies:
      1. ModalController
      2. ToastController
      3. VehicleFormComponent
      4. IonicModule
      5. FormsModule"

H12: "UI Components Used:
      1. ion-list
      2. ion-badge
      3. ion-toggle
      4. Custom modal
      5. Toast messages
      6. ion-icons"

Formatting:
- Apply borders to A11:H12
- Match formatting with existing rows
- Enable text wrapping
- Left align content
- Use bullet points for lists

A13: Component Details
B13: "live-tracking.component.ts & .html"
C13: "Real-time delivery tracking with map integration"
D13: "1. Live map display
      2. Driver location tracking
      3. Order status updates
      4. ETA calculations
      5. Delivery confirmation"

E13: "Data Properties:
      - map: L.Map
      - driverLocation: {lat,lng}
      - orderStatus: string
      - eta: string

      Methods:
      1. loadMap(): Initializes map
      2. trackDriverLive(): Updates location
      3. callDriver(): Contact driver
      4. confirmDelivery(): Confirms delivery"

F13: "Map Configuration:
      {
        defaultZoom: 12,
        updateInterval: 5000,
        mapProvider: 'OpenStreetMap',
        markerType: 'driver'
      }"

G13: "External Dependencies:
      1. leaflet
      2. IonicModule
      3. L.tileLayer
      4. L.marker"

H13: "UI Components Used:
      1. Map container
      2. Status card
      3. ion-footer
      4. ion-buttons
      5. Contact controls
      6. Confirm button"

A14: Component Details
B14: "sort-modal.component.ts & .html"
C14: "Modal for order sorting options"
D14: "1. Sort criteria selection
      2. Multiple sort options
      3. Two-way binding
      4. Modal controls"

E14: "Data Properties:
      - sortOption: string

      Methods:
      1. applySort(): Applies selection
      2. closeModal(): Dismisses modal"

F14: "Sort Options:
      - distance-asc
      - distance-desc
      - price-desc
      - quantity-asc
      - quantity-desc"

G14: "External Dependencies:
      1. IonicModule
      2. ModalController
      3. FormsModule
      4. CommonModule"

H14: "UI Components Used:
      1. ion-radio-group
      2. ion-radio
      3. ion-footer
      4. ion-buttons
      5. Modal controls"

Formatting:
- Apply borders to A13:H14
- Match formatting with existing rows
- Enable text wrapping
- Left align content
- Use bullet points for lists

A15: Component Details
B15: "filter-modal.component.ts & .html"
C15: "Modal for filtering delivery orders"
D15: "1. Multi-criteria filtering
      2. Priority delivery toggle
      3. Delayed orders filter
      4. Shared/Single delivery options
      5. Weight-based filtering"

E15: "Data Properties:
      - priorityDeliveries: boolean
      - delayedDeliveries: boolean
      - sharedDeliveries: boolean
      - singleDelivery: boolean

      Methods:
      1. applyFilters(): Applies selections
      2. resetFilters(): Resets to default
      3. dismiss(): Closes modal"

F15: "Filter Options:
      {
        priority: boolean,
        delayed: boolean,
        shared: boolean,
        single: boolean,
        weightRange: string
      }"

G15: "External Dependencies:
      1. IonicModule
      2. CommonModule
      3. FormsModule
      4. ModalController"

H15: "UI Components Used:
      1. ion-list
      2. ion-toggle
      3. ion-select
      4. ion-footer
      5. Filter buttons"

A16: Component Details
B16: "delivery-confirmation.component.ts & .html"
C16: "Delivery completion and confirmation interface"
D16: "1. Delivery verification
      2. Signature capture
      3. Photo upload
      4. Receipt generation
      5. Customer feedback"

E16: "Data Properties:
      - delivery: DeliveryDetails
      - signature: string
      - photos: string[]

      Methods:
      1. captureSignature(): Signature pad
      2. uploadPhotos(): Image handling
      3. generateReceipt(): PDF creation
      4. submitConfirmation(): Final submission"

F16: "DeliveryDetails Interface:
      {
        orderId: string,
        customer: string,
        items: Item[],
        totalWeight: number,
        deliveryTime: Date,
        status: string
      }"

G16: "External Dependencies:
      1. SignaturePad
      2. Camera
      3. PDFGenerator
      4. IonicStorage
      5. FileTransfer"

H16: "UI Components Used:
      1. Signature canvas
      2. Camera preview
      3. ion-card
      4. Progress bar
      5. Success modal"

Formatting:
- Apply borders to A15:H16
- Match formatting with existing rows
- Enable text wrapping
- Left align content
- Use bullet points for lists

Sheet: Transporter Module
Columns:
A: Component/Service Name
B: File Path
C: Purpose/Description
D: Key Functions
E: Data Flow
F: Dependencies
G: API Endpoints
H: Notes

A2: TransportDashboardComponent
B2: /src/app/transport/transport-dashboard/transport-dashboard.component.ts
C2: Main dashboard interface for tracking and managing deliveries
D2: - onTabChange(): Manages tab switching
    - loadUpcomingDeliveries(): Fetches upcoming orders
    - getStatusColor(): Status-based styling
E2: Top-down flow: Segment tabs > Order lists > Action buttons
F2: IonicModule, RouterModule, FormsModule, UpcomingDeliveriesService
G2: GET /api/deliveries/upcoming
H2: Features segmented view with 3 delivery status tabs

A3: TransportRequestsComponent
B3: /src/app/transport/transport-requests/transport-requests.component.ts
C3: Handles incoming delivery requests and order management
D3: - acceptUnassignedOrder(): Order acceptance logic
    - checkLoadWithinCapacity(): Load validation
    - applyFilters(): Filter management
    - applySort(): Sorting implementation
E3: Two-way flow: Unassigned orders > Accept/Reject > Load Management
F3: IonicModule, DatabaseService, AlertController, ModalController
G3: - POST /api/orders/accept
    - GET /api/orders/unassigned
H3: Implements real-time order polling and load capacity checks

A4: AssignDriverModal
B4: /src/app/transport/assign-driver-modal/assign-driver-modal.component.ts
C4: Modal for assigning drivers to accepted orders
D4: - assignDriver(): Driver assignment
    - validateAssignment(): Validates driver availability
E4: Modal > Driver Selection > Assignment Confirmation
F4: IonicModule, DatabaseService
G4: POST /api/orders/assign-driver
H4: Manages driver-order assignments
